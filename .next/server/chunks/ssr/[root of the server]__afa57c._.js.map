{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/acme-logo.tsx"],"sourcesContent":["import { GlobeAltIcon } from '@heroicons/react/24/outline';\r\nimport { lusitana } from '@/app/ui/fonts';\r\n\r\nexport default function AcmeLogo() {\r\n  return (\r\n    <div\r\n      className={`${lusitana.className} flex flex-row items-center leading-none text-white`}\r\n    >\r\n      <GlobeAltIcon className=\"h-12 w-12 rotate-[15deg]\" />\r\n      <p className=\"text-[44px]\">Acme</p>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AAAA;AADA;;;;AAGe,SAAS;IACtB,qBACE,ucAAC;QACC,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,mDAAmD,CAAC;;0BAErF,ucAAC,4UAAA,CAAA,eAAY;gBAAC,WAAU;;;;;;0BACxB,ucAAC;gBAAE,WAAU;0BAAc;;;;;;;;;;;;AAGjC"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/login-form.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,8cAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/login-form.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,8cAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqQ,GAClS,mCACA"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/login/page.tsx"],"sourcesContent":["import AcmeLogo from '@/app/ui/acme-logo';\r\nimport LoginForm from '@/app/ui/login-form';\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    <main className=\"flex items-center justify-center md:h-screen\">\r\n      <div className=\"relative mx-auto flex w-full max-w-[400px] flex-col space-y-2.5 p-4 md:-mt-32\">\r\n        <div className=\"flex h-20 w-full items-end rounded-lg bg-blue-500 p-3 md:h-36\">\r\n          <div className=\"w-32 text-white md:w-36\">\r\n            <AcmeLogo />\r\n          </div>\r\n        </div>\r\n        <LoginForm />\r\n      </div>\r\n    </main>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAEe,SAAS;IACtB,qBACE,ucAAC;QAAK,WAAU;kBACd,cAAA,ucAAC;YAAI,WAAU;;8BACb,ucAAC;oBAAI,WAAU;8BACb,cAAA,ucAAC;wBAAI,WAAU;kCACb,cAAA,ucAAC,0HAAA,CAAA,UAAQ;;;;;;;;;;;;;;;8BAGb,ucAAC,2HAAA,CAAA,UAAS;;;;;;;;;;;;;;;;AAIlB"}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/auth.config.ts"],"sourcesContent":["import type { NextAuthConfig } from 'next-auth';\r\n \r\nexport const authConfig = {\r\n  pages: {\r\n    signIn: '/login',\r\n  },\r\n  callbacks: {\r\n    authorized({ auth, request: { nextUrl } }) {\r\n      const isLoggedIn = !!auth?.user;\r\n      const isOnDashboard = nextUrl.pathname.startsWith('/dashboard');\r\n      if (isOnDashboard) {\r\n        if (isLoggedIn) return true;\r\n        return false; // Redirect unauthenticated users to login page\r\n      } else if (isLoggedIn) {\r\n        return Response.redirect(new URL('/dashboard', nextUrl));\r\n      }\r\n      return true;\r\n    },\r\n  },\r\n  providers: [], // Add providers with an empty array for now\r\n} satisfies NextAuthConfig;"],"names":[],"mappings":";;;AAEO,MAAM,aAAa;IACxB,OAAO;QACL,QAAQ;IACV;IACA,WAAW;QACT,YAAW,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;YACvC,MAAM,aAAa,CAAC,CAAC,MAAM;YAC3B,MAAM,gBAAgB,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAClD,IAAI,eAAe;gBACjB,IAAI,YAAY,OAAO;gBACvB,OAAO,OAAO,+CAA+C;YAC/D,OAAO,IAAI,YAAY;gBACrB,OAAO,SAAS,QAAQ,CAAC,IAAI,IAAI,cAAc;YACjD;YACA,OAAO;QACT;IACF;IACA,WAAW,EAAE;AACf"}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/auth.ts"],"sourcesContent":["import NextAuth from 'next-auth';\r\nimport Credentials from 'next-auth/providers/credentials';\r\nimport { authConfig } from './auth.config';\r\nimport { z } from 'zod';\r\nimport { sql } from '@vercel/postgres';\r\nimport type { User } from '@/app/lib/definitions';\r\nimport bcrypt from 'bcrypt';\r\n\r\nasync function getUser(email: string): Promise<User | undefined> {\r\n  try {\r\n    const user = await sql<User>`SELECT * FROM users WHERE email=${email}`;\r\n    if (user.rows.length === 0) return undefined; // Handle no user found case\r\n    return user.rows[0];\r\n  } catch (error) {\r\n    console.error('Failed to fetch user:', error);\r\n    throw new Error('Failed to fetch user.');\r\n  }\r\n}\r\n\r\nexport const { auth, signIn, signOut } = NextAuth({\r\n  ...authConfig,\r\n  providers: [\r\n    Credentials({\r\n      async authorize(credentials) {\r\n        const parsedCredentials = z\r\n          .object({ email: z.string().email(), password: z.string().min(6) })\r\n          .safeParse(credentials);\r\n\r\n        if (parsedCredentials.success) {\r\n          const { email, password } = parsedCredentials.data;\r\n          const user = await getUser(email);\r\n          if (!user) {\r\n            console.log('User not found');\r\n            return null;\r\n          }\r\n\r\n          const passwordsMatch = await bcrypt.compare(password, user.password);\r\n          if (passwordsMatch) {\r\n            return user; // Return user object on successful login\r\n          }\r\n        }\r\n\r\n        console.log('Invalid credentials');\r\n        return null; // Return null if authentication fails\r\n      },\r\n    }),\r\n  ],\r\n});\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;AAEA;AANA;AACA;AAEA;AACA;;;;;;;AAIA,eAAe,QAAQ,KAAa;IAClC,IAAI;QACF,MAAM,OAAO,MAAM,kPAAA,CAAA,MAAG,AAAM,CAAC,gCAAgC,EAAE,MAAM,CAAC;QACtE,IAAI,KAAK,IAAI,CAAC,MAAM,KAAK,GAAG,OAAO,WAAW,4BAA4B;QAC1E,OAAO,KAAK,IAAI,CAAC,EAAE;IACrB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,0WAAA,CAAA,UAAQ,AAAD,EAAE;IAChD,GAAG,8GAAA,CAAA,aAAU;IACb,WAAW;QACT,CAAA,GAAA,sNAAA,CAAA,UAAW,AAAD,EAAE;YACV,MAAM,WAAU,WAAW;gBACzB,MAAM,oBAAoB,qLAAA,CAAA,IAAC,CACxB,MAAM,CAAC;oBAAE,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;oBAAI,UAAU,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;gBAAG,GAChE,SAAS,CAAC;gBAEb,IAAI,kBAAkB,OAAO,EAAE;oBAC7B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,kBAAkB,IAAI;oBAClD,MAAM,OAAO,MAAM,QAAQ;oBAC3B,IAAI,CAAC,MAAM;wBACT,QAAQ,GAAG,CAAC;wBACZ,OAAO;oBACT;oBAEA,MAAM,iBAAiB,MAAM,+FAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;oBACnE,IAAI,gBAAgB;wBAClB,OAAO,MAAM,yCAAyC;oBACxD;gBACF;gBAEA,QAAQ,GAAG,CAAC;gBACZ,OAAO,MAAM,sCAAsC;YACrD;QACF;KACD;AACH"}},
    {"offset": {"line": 407, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 413, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/lib/actions.ts"],"sourcesContent":["'use server';\r\n\r\nimport { z } from 'zod';\r\nimport { sql } from '@vercel/postgres';\r\nimport { revalidatePath } from 'next/cache';\r\nimport { redirect } from 'next/navigation';\r\nimport { signIn } from '../../auth';\r\nimport { AuthError } from 'next-auth';\r\n\r\nconst FormSchema = z.object({\r\n  id: z.string(),\r\n  customerId: z.string({\r\n    invalid_type_error: 'Please select a customer.',\r\n  }),\r\n  amount: z.coerce\r\n    .number()\r\n    .gt(0, { message: 'Please enter an amount greater than $0.' }),\r\n  status: z.enum(['pending', 'paid'], {\r\n    invalid_type_error: 'Please select an invoice status.',\r\n  }),\r\n  date: z.string(),\r\n});\r\n\r\nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\r\nconst UpdateInvoice = FormSchema.omit({ date: true, id: true });\r\n\r\nexport type State = {\r\n  errors?: {\r\n    customerId?: string[];\r\n    amount?: string[];\r\n    status?: string[];\r\n  };\r\n  message?: string | null;\r\n};\r\n\r\nexport async function createInvoice(prevState: State, formData: FormData) {\r\n  // Validate form fields using Zod\r\n  const validatedFields = CreateInvoice.safeParse({\r\n    customerId: formData.get('customerId'),\r\n    amount: formData.get('amount'),\r\n    status: formData.get('status'),\r\n  });\r\n\r\n  // If form validation fails, return errors early. Otherwise, continue.\r\n  if (!validatedFields.success) {\r\n    return {\r\n      errors: validatedFields.error.flatten().fieldErrors,\r\n      message: 'Missing Fields. Failed to Create Invoice.',\r\n    };\r\n  }\r\n\r\n  // Prepare data for insertion into the database\r\n  const { customerId, amount, status } = validatedFields.data;\r\n  const amountInCents = amount * 100;\r\n  const date = new Date().toISOString().split('T')[0];\r\n\r\n  // Insert data into the database\r\n  try {\r\n    await sql`\r\n      INSERT INTO invoices (customer_id, amount, status, date)\r\n      VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\r\n    `;\r\n  } catch (error) {\r\n    // If a database error occurs, return a more specific error.\r\n    return {\r\n      message: 'Database Error: Failed to Create Invoice.',\r\n    };\r\n  }\r\n\r\n  // Revalidate the cache for the invoices page and redirect the user.\r\n  revalidatePath('/dashboard/invoices');\r\n  redirect('/dashboard/invoices');\r\n}\r\n\r\nexport async function updateInvoice(\r\n  id: string,\r\n  prevState: State,\r\n  formData: FormData,\r\n) {\r\n  const validatedFields = UpdateInvoice.safeParse({\r\n    customerId: formData.get('customerId'),\r\n    amount: formData.get('amount'),\r\n    status: formData.get('status'),\r\n  });\r\n\r\n  if (!validatedFields.success) {\r\n    return {\r\n      errors: validatedFields.error.flatten().fieldErrors,\r\n      message: 'Missing Fields. Failed to Update Invoice.',\r\n    };\r\n  }\r\n\r\n  const { customerId, amount, status } = validatedFields.data;\r\n  const amountInCents = amount * 100;\r\n\r\n  try {\r\n    await sql`\r\n      UPDATE invoices\r\n      SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\r\n      WHERE id = ${id}\r\n    `;\r\n  } catch (error) {\r\n    return { message: 'Database Error: Failed to Update Invoice.' };\r\n  }\r\n\r\n  revalidatePath('/dashboard/invoices');\r\n  redirect('/dashboard/invoices');\r\n}\r\n\r\nexport async function deleteInvoice(id: string) {\r\n  // throw new Error('Failed to Delete Invoice');\r\n\r\n  try {\r\n    await sql`DELETE FROM invoices WHERE id = ${id}`;\r\n    revalidatePath('/dashboard/invoices');\r\n    return { message: 'Deleted Invoice' };\r\n  } catch (error) {\r\n    return { message: 'Database Error: Failed to Delete Invoice.' };\r\n  }\r\n}\r\n\r\nexport async function authenticate(\r\n  prevState: string | undefined,\r\n  formData: FormData,\r\n) {\r\n  try {\r\n    await signIn('credentials', formData);\r\n  } catch (error) {\r\n    if (error instanceof AuthError) {\r\n      switch (error.type) {\r\n        case 'CredentialsSignin':\r\n          return 'Invalid credentials.';\r\n        default:\r\n          return 'Something went wrong.';\r\n      }\r\n    }\r\n    throw error;\r\n  }\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/.next-internal/server/app/login/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n  '344e743686735202b1d7d8cdb5a2ba161e7f837f': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['createInvoice'])(...args)),\n  '8b33d17ed6eb5484a6c9d06839b6fd76ea894e74': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['authenticate'])(...args)),\n  '9f9b112f9b8e50a0388c8a6e4f075faaa288ec94': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['updateInvoice'])(...args)),\n  'fdda32d133c9013289279e5c6922829d9811e4ab': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['deleteInvoice'])(...args)),\n});"],"names":[],"mappings":"AAAA,2BAA2B;IACzB,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,+EAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,gBAAgB,KAAK;IAC9I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,+EAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,eAAe,KAAK;IAC7I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,+EAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,gBAAgB,KAAK;IAC9I,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,+EAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,gBAAgB,KAAK;AAChJ"}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}