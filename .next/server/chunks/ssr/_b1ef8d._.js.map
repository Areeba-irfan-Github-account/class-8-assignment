{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/lib/utils.ts"],"sourcesContent":["import { Revenue } from './definitions';\r\n\r\nexport const formatCurrency = (amount: number) => {\r\n  return (amount / 100).toLocaleString('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  });\r\n};\r\n\r\nexport const formatDateToLocal = (\r\n  dateStr: string,\r\n  locale: string = 'en-US',\r\n) => {\r\n  const date = new Date(dateStr);\r\n  const options: Intl.DateTimeFormatOptions = {\r\n    day: 'numeric',\r\n    month: 'short',\r\n    year: 'numeric',\r\n  };\r\n  const formatter = new Intl.DateTimeFormat(locale, options);\r\n  return formatter.format(date);\r\n};\r\n\r\nexport const generateYAxis = (revenue: Revenue[]) => {\r\n  // Calculate what labels we need to display on the y-axis\r\n  // based on highest record and in 1000s\r\n  const yAxisLabels = [];\r\n  const highestRecord = Math.max(...revenue.map((month) => month.revenue));\r\n  const topLabel = Math.ceil(highestRecord / 1000) * 1000;\r\n\r\n  for (let i = topLabel; i >= 0; i -= 1000) {\r\n    yAxisLabels.push(`$${i / 1000}K`);\r\n  }\r\n\r\n  return { yAxisLabels, topLabel };\r\n};\r\n\r\nexport const generatePagination = (currentPage: number, totalPages: number) => {\r\n  // If the total number of pages is 7 or less,\r\n  // display all pages without any ellipsis.\r\n  if (totalPages <= 7) {\r\n    return Array.from({ length: totalPages }, (_, i) => i + 1);\r\n  }\r\n\r\n  // If the current page is among the first 3 pages,\r\n  // show the first 3, an ellipsis, and the last 2 pages.\r\n  if (currentPage <= 3) {\r\n    return [1, 2, 3, '...', totalPages - 1, totalPages];\r\n  }\r\n\r\n  // If the current page is among the last 3 pages,\r\n  // show the first 2, an ellipsis, and the last 3 pages.\r\n  if (currentPage >= totalPages - 2) {\r\n    return [1, 2, '...', totalPages - 2, totalPages - 1, totalPages];\r\n  }\r\n\r\n  // If the current page is somewhere in the middle,\r\n  // show the first page, an ellipsis, the current page and its neighbors,\r\n  // another ellipsis, and the last page.\r\n  return [\r\n    1,\r\n    '...',\r\n    currentPage - 1,\r\n    currentPage,\r\n    currentPage + 1,\r\n    '...',\r\n    totalPages,\r\n  ];\r\n};\r\n"],"names":[],"mappings":";;;;;;AAEO,MAAM,iBAAiB,CAAC;IAC7B,OAAO,CAAC,SAAS,GAAG,EAAE,cAAc,CAAC,SAAS;QAC5C,OAAO;QACP,UAAU;IACZ;AACF;AAEO,MAAM,oBAAoB,CAC/B,SACA,SAAiB,OAAO;IAExB,MAAM,OAAO,IAAI,KAAK;IACtB,MAAM,UAAsC;QAC1C,KAAK;QACL,OAAO;QACP,MAAM;IACR;IACA,MAAM,YAAY,IAAI,KAAK,cAAc,CAAC,QAAQ;IAClD,OAAO,UAAU,MAAM,CAAC;AAC1B;AAEO,MAAM,gBAAgB,CAAC;IAC5B,yDAAyD;IACzD,uCAAuC;IACvC,MAAM,cAAc,EAAE;IACtB,MAAM,gBAAgB,KAAK,GAAG,IAAI,QAAQ,GAAG,CAAC,CAAC,QAAU,MAAM,OAAO;IACtE,MAAM,WAAW,KAAK,IAAI,CAAC,gBAAgB,QAAQ;IAEnD,IAAK,IAAI,IAAI,UAAU,KAAK,GAAG,KAAK,KAAM;QACxC,YAAY,IAAI,CAAC,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,CAAC;IAClC;IAEA,OAAO;QAAE;QAAa;IAAS;AACjC;AAEO,MAAM,qBAAqB,CAAC,aAAqB;IACtD,6CAA6C;IAC7C,0CAA0C;IAC1C,IAAI,cAAc,GAAG;QACnB,OAAO,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAW,GAAG,CAAC,GAAG,IAAM,IAAI;IAC1D;IAEA,kDAAkD;IAClD,uDAAuD;IACvD,IAAI,eAAe,GAAG;QACpB,OAAO;YAAC;YAAG;YAAG;YAAG;YAAO,aAAa;YAAG;SAAW;IACrD;IAEA,iDAAiD;IACjD,uDAAuD;IACvD,IAAI,eAAe,aAAa,GAAG;QACjC,OAAO;YAAC;YAAG;YAAG;YAAO,aAAa;YAAG,aAAa;YAAG;SAAW;IAClE;IAEA,kDAAkD;IAClD,wEAAwE;IACxE,uCAAuC;IACvC,OAAO;QACL;QACA;QACA,cAAc;QACd;QACA,cAAc;QACd;QACA;KACD;AACH"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/lib/data.ts"],"sourcesContent":["import { sql } from '@vercel/postgres';\r\nimport {\r\n  CustomerField,\r\n  CustomersTableType,\r\n  InvoiceForm,\r\n  InvoicesTable,\r\n  LatestInvoiceRaw,\r\n  Revenue,\r\n} from './definitions';\r\nimport { formatCurrency } from './utils';\r\n\r\nexport async function fetchRevenue() {\r\n  try {\r\n    // Artificially delay a response for demo purposes.\r\n    // Don't do this in production :)\r\n\r\n    // console.log('Fetching revenue data...');\r\n    // await new Promise((resolve) => setTimeout(resolve, 3000));\r\n\r\n    const data = await sql<Revenue>`SELECT * FROM revenue`;\r\n\r\n    // console.log('Data fetch completed after 3 seconds.');\r\n\r\n    return data.rows;\r\n  } catch (error) {\r\n    console.error('Database Error:', error);\r\n    throw new Error('Failed to fetch revenue data.');\r\n  }\r\n}\r\n\r\nexport async function fetchLatestInvoices() {\r\n  try {\r\n    const data = await sql<LatestInvoiceRaw>`\r\n      SELECT invoices.amount, customers.name, customers.image_url, customers.email, invoices.id\r\n      FROM invoices\r\n      JOIN customers ON invoices.customer_id = customers.id\r\n      ORDER BY invoices.date DESC\r\n      LIMIT 5`;\r\n\r\n    const latestInvoices = data.rows.map((invoice) => ({\r\n      ...invoice,\r\n      amount: formatCurrency(invoice.amount),\r\n    }));\r\n    return latestInvoices;\r\n  } catch (error) {\r\n    console.error('Database Error:', error);\r\n    throw new Error('Failed to fetch the latest invoices.');\r\n  }\r\n}\r\n\r\nexport async function fetchCardData() {\r\n  try {\r\n    // You can probably combine these into a single SQL query\r\n    // However, we are intentionally splitting them to demonstrate\r\n    // how to initialize multiple queries in parallel with JS.\r\n    const invoiceCountPromise = sql`SELECT COUNT(*) FROM invoices`;\r\n    const customerCountPromise = sql`SELECT COUNT(*) FROM customers`;\r\n    const invoiceStatusPromise = sql`SELECT\r\n         SUM(CASE WHEN status = 'paid' THEN amount ELSE 0 END) AS \"paid\",\r\n         SUM(CASE WHEN status = 'pending' THEN amount ELSE 0 END) AS \"pending\"\r\n         FROM invoices`;\r\n\r\n    const data = await Promise.all([\r\n      invoiceCountPromise,\r\n      customerCountPromise,\r\n      invoiceStatusPromise,\r\n    ]);\r\n\r\n    const numberOfInvoices = Number(data[0].rows[0].count ?? '0');\r\n    const numberOfCustomers = Number(data[1].rows[0].count ?? '0');\r\n    const totalPaidInvoices = formatCurrency(data[2].rows[0].paid ?? '0');\r\n    const totalPendingInvoices = formatCurrency(data[2].rows[0].pending ?? '0');\r\n\r\n    return {\r\n      numberOfCustomers,\r\n      numberOfInvoices,\r\n      totalPaidInvoices,\r\n      totalPendingInvoices,\r\n    };\r\n  } catch (error) {\r\n    console.error('Database Error:', error);\r\n    throw new Error('Failed to fetch card data.');\r\n  }\r\n}\r\n\r\nconst ITEMS_PER_PAGE = 6;\r\nexport async function fetchFilteredInvoices(\r\n  query: string,\r\n  currentPage: number,\r\n) {\r\n  const offset = (currentPage - 1) * ITEMS_PER_PAGE;\r\n\r\n  try {\r\n    const invoices = await sql<InvoicesTable>`\r\n      SELECT\r\n        invoices.id,\r\n        invoices.amount,\r\n        invoices.date,\r\n        invoices.status,\r\n        customers.name,\r\n        customers.email,\r\n        customers.image_url\r\n      FROM invoices\r\n      JOIN customers ON invoices.customer_id = customers.id\r\n      WHERE\r\n        customers.name ILIKE ${`%${query}%`} OR\r\n        customers.email ILIKE ${`%${query}%`} OR\r\n        invoices.amount::text ILIKE ${`%${query}%`} OR\r\n        invoices.date::text ILIKE ${`%${query}%`} OR\r\n        invoices.status ILIKE ${`%${query}%`}\r\n      ORDER BY invoices.date DESC\r\n      LIMIT ${ITEMS_PER_PAGE} OFFSET ${offset}\r\n    `;\r\n\r\n    return invoices.rows;\r\n  } catch (error) {\r\n    console.error('Database Error:', error);\r\n    throw new Error('Failed to fetch invoices.');\r\n  }\r\n}\r\n\r\nexport async function fetchInvoicesPages(query: string) {\r\n  try {\r\n    const count = await sql`SELECT COUNT(*)\r\n    FROM invoices\r\n    JOIN customers ON invoices.customer_id = customers.id\r\n    WHERE\r\n      customers.name ILIKE ${`%${query}%`} OR\r\n      customers.email ILIKE ${`%${query}%`} OR\r\n      invoices.amount::text ILIKE ${`%${query}%`} OR\r\n      invoices.date::text ILIKE ${`%${query}%`} OR\r\n      invoices.status ILIKE ${`%${query}%`}\r\n  `;\r\n\r\n    const totalPages = Math.ceil(Number(count.rows[0].count) / ITEMS_PER_PAGE);\r\n    return totalPages;\r\n  } catch (error) {\r\n    console.error('Database Error:', error);\r\n    throw new Error('Failed to fetch total number of invoices.');\r\n  }\r\n}\r\n\r\nexport async function fetchInvoiceById(id: string) {\r\n  try {\r\n    const data = await sql<InvoiceForm>`\r\n      SELECT\r\n        invoices.id,\r\n        invoices.customer_id,\r\n        invoices.amount,\r\n        invoices.status\r\n      FROM invoices\r\n      WHERE invoices.id = ${id};\r\n    `;\r\n\r\n    const invoice = data.rows.map((invoice) => ({\r\n      ...invoice,\r\n      // Convert amount from cents to dollars\r\n      amount: invoice.amount / 100,\r\n    }));\r\n\r\n    return invoice[0];\r\n  } catch (error) {\r\n    console.error('Database Error:', error);\r\n    throw new Error('Failed to fetch invoice.');\r\n  }\r\n}\r\n\r\nexport async function fetchCustomers() {\r\n  try {\r\n    const data = await sql<CustomerField>`\r\n      SELECT\r\n        id,\r\n        name\r\n      FROM customers\r\n      ORDER BY name ASC\r\n    `;\r\n\r\n    const customers = data.rows;\r\n    return customers;\r\n  } catch (err) {\r\n    console.error('Database Error:', err);\r\n    throw new Error('Failed to fetch all customers.');\r\n  }\r\n}\r\n\r\nexport async function fetchFilteredCustomers(query: string) {\r\n  try {\r\n    const data = await sql<CustomersTableType>`\r\n\t\tSELECT\r\n\t\t  customers.id,\r\n\t\t  customers.name,\r\n\t\t  customers.email,\r\n\t\t  customers.image_url,\r\n\t\t  COUNT(invoices.id) AS total_invoices,\r\n\t\t  SUM(CASE WHEN invoices.status = 'pending' THEN invoices.amount ELSE 0 END) AS total_pending,\r\n\t\t  SUM(CASE WHEN invoices.status = 'paid' THEN invoices.amount ELSE 0 END) AS total_paid\r\n\t\tFROM customers\r\n\t\tLEFT JOIN invoices ON customers.id = invoices.customer_id\r\n\t\tWHERE\r\n\t\t  customers.name ILIKE ${`%${query}%`} OR\r\n        customers.email ILIKE ${`%${query}%`}\r\n\t\tGROUP BY customers.id, customers.name, customers.email, customers.image_url\r\n\t\tORDER BY customers.name ASC\r\n\t  `;\r\n\r\n    const customers = data.rows.map((customer) => ({\r\n      ...customer,\r\n      total_pending: formatCurrency(customer.total_pending),\r\n      total_paid: formatCurrency(customer.total_paid),\r\n    }));\r\n\r\n    return customers;\r\n  } catch (err) {\r\n    console.error('Database Error:', err);\r\n    throw new Error('Failed to fetch customer table.');\r\n  }\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/dashboard/cards.tsx"],"sourcesContent":["import {\r\n  BanknotesIcon,\r\n  ClockIcon,\r\n  UserGroupIcon,\r\n  InboxIcon,\r\n} from '@heroicons/react/24/outline';\r\nimport { lusitana } from '@/app/ui/fonts';\r\nimport { fetchCardData } from '@/app/lib/data';\r\n\r\nconst iconMap = {\r\n  collected: BanknotesIcon,\r\n  customers: UserGroupIcon,\r\n  pending: ClockIcon,\r\n  invoices: InboxIcon,\r\n};\r\n\r\nexport default async function CardWrapper() {\r\n  const {\r\n    numberOfInvoices,\r\n    numberOfCustomers,\r\n    totalPaidInvoices,\r\n    totalPendingInvoices,\r\n  } = await fetchCardData();\r\n\r\n  return (\r\n    <>\r\n      <Card title=\"Collected\" value={totalPaidInvoices} type=\"collected\" />\r\n      <Card title=\"Pending\" value={totalPendingInvoices} type=\"pending\" />\r\n      <Card title=\"Total Invoices\" value={numberOfInvoices} type=\"invoices\" />\r\n      <Card\r\n        title=\"Total Customers\"\r\n        value={numberOfCustomers}\r\n        type=\"customers\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport function Card({\r\n  title,\r\n  value,\r\n  type,\r\n}: {\r\n  title: string;\r\n  value: number | string;\r\n  type: 'invoices' | 'customers' | 'pending' | 'collected';\r\n}) {\r\n  const Icon = iconMap[type];\r\n\r\n  return (\r\n    <div className=\"rounded-xl bg-gray-50 p-2 shadow-sm\">\r\n      <div className=\"flex p-4\">\r\n        {Icon ? <Icon className=\"h-5 w-5 text-gray-700\" /> : null}\r\n        <h3 className=\"ml-2 text-sm font-medium\">{title}</h3>\r\n      </div>\r\n      <p\r\n        className={`${lusitana.className}\r\n          truncate rounded-xl bg-white px-4 py-8 text-center text-2xl`}\r\n      >\r\n        {value}\r\n      </p>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAMA;AACA;AAPA;AAAA;AAAA;AAAA;AAMA;;;;;AAGA,MAAM,UAAU;IACd,WAAW,8UAAA,CAAA,gBAAa;IACxB,WAAW,8UAAA,CAAA,gBAAa;IACxB,SAAS,sUAAA,CAAA,YAAS;IAClB,UAAU,sUAAA,CAAA,YAAS;AACrB;AAEe,eAAe;IAC5B,MAAM,EACJ,gBAAgB,EAChB,iBAAiB,EACjB,iBAAiB,EACjB,oBAAoB,EACrB,GAAG,MAAM,CAAA,GAAA,kHAAA,CAAA,gBAAa,AAAD;IAEtB,qBACE;;0BACE,ucAAC;gBAAK,OAAM;gBAAY,OAAO;gBAAmB,MAAK;;;;;;0BACvD,ucAAC;gBAAK,OAAM;gBAAU,OAAO;gBAAsB,MAAK;;;;;;0BACxD,ucAAC;gBAAK,OAAM;gBAAiB,OAAO;gBAAkB,MAAK;;;;;;0BAC3D,ucAAC;gBACC,OAAM;gBACN,OAAO;gBACP,MAAK;;;;;;;;AAIb;AAEO,SAAS,KAAK,EACnB,KAAK,EACL,KAAK,EACL,IAAI,EAKL;IACC,MAAM,OAAO,OAAO,CAAC,KAAK;IAE1B,qBACE,ucAAC;QAAI,WAAU;;0BACb,ucAAC;gBAAI,WAAU;;oBACZ,qBAAO,ucAAC;wBAAK,WAAU;;;;;+BAA6B;kCACrD,ucAAC;wBAAG,WAAU;kCAA4B;;;;;;;;;;;;0BAE5C,ucAAC;gBACC,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC;qEAC4B,CAAC;0BAE7D;;;;;;;;;;;;AAIT"}},
    {"offset": {"line": 405, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/dashboard/revenue-chart.tsx"],"sourcesContent":["import { generateYAxis } from '@/app/lib/utils';\r\nimport { CalendarIcon } from '@heroicons/react/24/outline';\r\nimport { lusitana } from '@/app/ui/fonts';\r\nimport { fetchRevenue } from '@/app/lib/data';\r\n\r\n// This component is representational only.\r\n// For data visualization UI, check out:\r\n// https://www.tremor.so/\r\n// https://www.chartjs.org/\r\n// https://airbnb.io/visx/\r\n\r\nexport default async function RevenueChart() {\r\n  const revenue = await fetchRevenue();\r\n\r\n  const chartHeight = 350;\r\n  const { yAxisLabels, topLabel } = generateYAxis(revenue);\r\n\r\n  if (!revenue || revenue.length === 0) {\r\n    return <p className=\"mt-4 text-gray-400\">No data available.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-full md:col-span-4\">\r\n      <h2 className={`${lusitana.className} mb-4 text-xl md:text-2xl`}>\r\n        Recent Revenue\r\n      </h2>\r\n      <div className=\"rounded-xl bg-gray-50 p-4\">\r\n        <div className=\"sm:grid-cols-13 mt-0 grid grid-cols-12 items-end gap-2 rounded-md bg-white p-4 md:gap-4\">\r\n          {/* y-axis */}\r\n          <div\r\n            className=\"mb-6 hidden flex-col justify-between text-sm text-gray-400 sm:flex\"\r\n            style={{ height: `${chartHeight}px` }}\r\n          >\r\n            {yAxisLabels.map((label) => (\r\n              <p key={label}>{label}</p>\r\n            ))}\r\n          </div>\r\n\r\n          {revenue.map((month) => (\r\n            <div key={month.month} className=\"flex flex-col items-center gap-2\">\r\n              {/* bars */}\r\n              <div\r\n                className=\"w-full rounded-md bg-blue-300\"\r\n                style={{\r\n                  height: `${(chartHeight / topLabel) * month.revenue}px`,\r\n                }}\r\n              ></div>\r\n              {/* x-axis */}\r\n              <p className=\"-rotate-90 text-sm text-gray-400 sm:rotate-0\">\r\n                {month.month}\r\n              </p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex items-center pb-2 pt-6\">\r\n          <CalendarIcon className=\"h-5 w-5 text-gray-500\" />\r\n          <h3 className=\"ml-2 text-sm text-gray-500 \">Last 12 months</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AAEA;AACA;AADA;AADA;;;;;;AAUe,eAAe;IAC5B,MAAM,UAAU,MAAM,CAAA,GAAA,kHAAA,CAAA,eAAY,AAAD;IAEjC,MAAM,cAAc;IACpB,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,mHAAA,CAAA,gBAAa,AAAD,EAAE;IAEhD,IAAI,CAAC,WAAW,QAAQ,MAAM,KAAK,GAAG;QACpC,qBAAO,ucAAC;YAAE,WAAU;sBAAqB;;;;;;IAC3C;IAEA,qBACE,ucAAC;QAAI,WAAU;;0BACb,ucAAC;gBAAG,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,yBAAyB,CAAC;0BAAE;;;;;;0BAGjE,ucAAC;gBAAI,WAAU;;kCACb,ucAAC;wBAAI,WAAU;;0CAEb,ucAAC;gCACC,WAAU;gCACV,OAAO;oCAAE,QAAQ,GAAG,YAAY,EAAE,CAAC;gCAAC;0CAEnC,YAAY,GAAG,CAAC,CAAC,sBAChB,ucAAC;kDAAe;uCAAR;;;;;;;;;;4BAIX,QAAQ,GAAG,CAAC,CAAC,sBACZ,ucAAC;oCAAsB,WAAU;;sDAE/B,ucAAC;4CACC,WAAU;4CACV,OAAO;gDACL,QAAQ,GAAG,AAAC,cAAc,WAAY,MAAM,OAAO,CAAC,EAAE,CAAC;4CACzD;;;;;;sDAGF,ucAAC;4CAAE,WAAU;sDACV,MAAM,KAAK;;;;;;;mCAVN,MAAM,KAAK;;;;;;;;;;;kCAezB,ucAAC;wBAAI,WAAU;;0CACb,ucAAC,4UAAA,CAAA,eAAY;gCAAC,WAAU;;;;;;0CACxB,ucAAC;gCAAG,WAAU;0CAA8B;;;;;;;;;;;;;;;;;;;;;;;;AAKtD"}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 549, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/dashboard/latest-invoices.tsx"],"sourcesContent":["import { ArrowPathIcon } from '@heroicons/react/24/outline';\r\nimport clsx from 'clsx';\r\nimport Image from 'next/image';\r\nimport { lusitana } from '@/app/ui/fonts';\r\nimport { fetchLatestInvoices } from '@/app/lib/data';\r\n\r\nexport default async function LatestInvoices() {\r\n  const latestInvoices = await fetchLatestInvoices();\r\n\r\n  return (\r\n    <div className=\"flex w-full flex-col md:col-span-4\">\r\n      <h2 className={`${lusitana.className} mb-4 text-xl md:text-2xl`}>\r\n        Latest Invoices\r\n      </h2>\r\n      <div className=\"flex grow flex-col justify-between rounded-xl bg-gray-50 p-4\">\r\n        <div className=\"bg-white px-6\">\r\n          {latestInvoices.map((invoice, i) => {\r\n            return (\r\n              <div\r\n                key={invoice.id}\r\n                className={clsx(\r\n                  'flex flex-row items-center justify-between py-4',\r\n                  {\r\n                    'border-t': i !== 0,\r\n                  },\r\n                )}\r\n              >\r\n                <div className=\"flex items-center\">\r\n                  <Image\r\n                    src={invoice.image_url}\r\n                    alt={`${invoice.name}'s profile picture`}\r\n                    className=\"mr-4 rounded-full\"\r\n                    width={32}\r\n                    height={32}\r\n                  />\r\n                  <div className=\"min-w-0\">\r\n                    <p className=\"truncate text-sm font-semibold md:text-base\">\r\n                      {invoice.name}\r\n                    </p>\r\n                    <p className=\"hidden text-sm text-gray-500 sm:block\">\r\n                      {invoice.email}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <p\r\n                  className={`${lusitana.className} truncate text-sm font-medium md:text-base`}\r\n                >\r\n                  {invoice.amount}\r\n                </p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"flex items-center pb-2 pt-6\">\r\n          <ArrowPathIcon className=\"h-5 w-5 text-gray-500\" />\r\n          <h3 className=\"ml-2 text-sm text-gray-500 \">Updated just now</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA;AADA;AAHA;;;;;;;AAMe,eAAe;IAC5B,MAAM,iBAAiB,MAAM,CAAA,GAAA,kHAAA,CAAA,sBAAmB,AAAD;IAE/C,qBACE,ucAAC;QAAI,WAAU;;0BACb,ucAAC;gBAAG,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,yBAAyB,CAAC;0BAAE;;;;;;0BAGjE,ucAAC;gBAAI,WAAU;;kCACb,ucAAC;wBAAI,WAAU;kCACZ,eAAe,GAAG,CAAC,CAAC,SAAS;4BAC5B,qBACE,ucAAC;gCAEC,WAAW,CAAA,GAAA,sLAAA,CAAA,UAAI,AAAD,EACZ,mDACA;oCACE,YAAY,MAAM;gCACpB;;kDAGF,ucAAC;wCAAI,WAAU;;0DACb,ucAAC,sVAAA,CAAA,UAAK;gDACJ,KAAK,QAAQ,SAAS;gDACtB,KAAK,GAAG,QAAQ,IAAI,CAAC,kBAAkB,CAAC;gDACxC,WAAU;gDACV,OAAO;gDACP,QAAQ;;;;;;0DAEV,ucAAC;gDAAI,WAAU;;kEACb,ucAAC;wDAAE,WAAU;kEACV,QAAQ,IAAI;;;;;;kEAEf,ucAAC;wDAAE,WAAU;kEACV,QAAQ,KAAK;;;;;;;;;;;;;;;;;;kDAIpB,ucAAC;wCACC,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,0CAA0C,CAAC;kDAE3E,QAAQ,MAAM;;;;;;;+BA5BZ,QAAQ,EAAE;;;;;wBAgCrB;;;;;;kCAEF,ucAAC;wBAAI,WAAU;;0CACb,ucAAC,8UAAA,CAAA,gBAAa;gCAAC,WAAU;;;;;;0CACzB,ucAAC;gCAAG,WAAU;0CAA8B;;;;;;;;;;;;;;;;;;;;;;;;AAKtD"}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 697, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/ui/skeletons.tsx"],"sourcesContent":["// Loading animation\r\nconst shimmer =\r\n  'before:absolute before:inset-0 before:-translate-x-full before:animate-[shimmer_2s_infinite] before:bg-gradient-to-r before:from-transparent before:via-white/60 before:to-transparent';\r\n\r\nexport function CardSkeleton() {\r\n  return (\r\n    <div\r\n      className={`${shimmer} relative overflow-hidden rounded-xl bg-gray-100 p-2 shadow-sm`}\r\n    >\r\n      <div className=\"flex p-4\">\r\n        <div className=\"h-5 w-5 rounded-md bg-gray-200\" />\r\n        <div className=\"ml-2 h-6 w-16 rounded-md bg-gray-200 text-sm font-medium\" />\r\n      </div>\r\n      <div className=\"flex items-center justify-center truncate rounded-xl bg-white px-4 py-8\">\r\n        <div className=\"h-7 w-20 rounded-md bg-gray-200\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function CardsSkeleton() {\r\n  return (\r\n    <>\r\n      <CardSkeleton />\r\n      <CardSkeleton />\r\n      <CardSkeleton />\r\n      <CardSkeleton />\r\n    </>\r\n  );\r\n}\r\n\r\nexport function RevenueChartSkeleton() {\r\n  return (\r\n    <div className={`${shimmer} relative w-full overflow-hidden md:col-span-4`}>\r\n      <div className=\"mb-4 h-8 w-36 rounded-md bg-gray-100\" />\r\n      <div className=\"rounded-xl bg-gray-100 p-4\">\r\n        <div className=\"sm:grid-cols-13 mt-0 grid h-[410px] grid-cols-12 items-end gap-2 rounded-md bg-white p-4 md:gap-4\" />\r\n        <div className=\"flex items-center pb-2 pt-6\">\r\n          <div className=\"h-5 w-5 rounded-full bg-gray-200\" />\r\n          <div className=\"ml-2 h-4 w-20 rounded-md bg-gray-200\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function InvoiceSkeleton() {\r\n  return (\r\n    <div className=\"flex flex-row items-center justify-between border-b border-gray-100 py-4\">\r\n      <div className=\"flex items-center\">\r\n        <div className=\"mr-2 h-8 w-8 rounded-full bg-gray-200\" />\r\n        <div className=\"min-w-0\">\r\n          <div className=\"h-5 w-40 rounded-md bg-gray-200\" />\r\n          <div className=\"mt-2 h-4 w-12 rounded-md bg-gray-200\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"mt-2 h-4 w-12 rounded-md bg-gray-200\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function LatestInvoicesSkeleton() {\r\n  return (\r\n    <div\r\n      className={`${shimmer} relative flex w-full flex-col overflow-hidden md:col-span-4`}\r\n    >\r\n      <div className=\"mb-4 h-8 w-36 rounded-md bg-gray-100\" />\r\n      <div className=\"flex grow flex-col justify-between rounded-xl bg-gray-100 p-4\">\r\n        <div className=\"bg-white px-6\">\r\n          <InvoiceSkeleton />\r\n          <InvoiceSkeleton />\r\n          <InvoiceSkeleton />\r\n          <InvoiceSkeleton />\r\n          <InvoiceSkeleton />\r\n        </div>\r\n        <div className=\"flex items-center pb-2 pt-6\">\r\n          <div className=\"h-5 w-5 rounded-full bg-gray-200\" />\r\n          <div className=\"ml-2 h-4 w-20 rounded-md bg-gray-200\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function DashboardSkeleton() {\r\n  return (\r\n    <>\r\n      <div\r\n        className={`${shimmer} relative mb-4 h-8 w-36 overflow-hidden rounded-md bg-gray-100`}\r\n      />\r\n      <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-4\">\r\n        <CardSkeleton />\r\n        <CardSkeleton />\r\n        <CardSkeleton />\r\n        <CardSkeleton />\r\n      </div>\r\n      <div className=\"mt-6 grid grid-cols-1 gap-6 md:grid-cols-4 lg:grid-cols-8\">\r\n        <RevenueChartSkeleton />\r\n        <LatestInvoicesSkeleton />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function TableRowSkeleton() {\r\n  return (\r\n    <tr className=\"w-full border-b border-gray-100 last-of-type:border-none [&:first-child>td:first-child]:rounded-tl-lg [&:first-child>td:last-child]:rounded-tr-lg [&:last-child>td:first-child]:rounded-bl-lg [&:last-child>td:last-child]:rounded-br-lg\">\r\n      {/* Customer Name and Image */}\r\n      <td className=\"relative overflow-hidden whitespace-nowrap py-3 pl-6 pr-3\">\r\n        <div className=\"flex items-center gap-3\">\r\n          <div className=\"h-8 w-8 rounded-full bg-gray-100\"></div>\r\n          <div className=\"h-6 w-24 rounded bg-gray-100\"></div>\r\n        </div>\r\n      </td>\r\n      {/* Email */}\r\n      <td className=\"whitespace-nowrap px-3 py-3\">\r\n        <div className=\"h-6 w-32 rounded bg-gray-100\"></div>\r\n      </td>\r\n      {/* Amount */}\r\n      <td className=\"whitespace-nowrap px-3 py-3\">\r\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\r\n      </td>\r\n      {/* Date */}\r\n      <td className=\"whitespace-nowrap px-3 py-3\">\r\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\r\n      </td>\r\n      {/* Status */}\r\n      <td className=\"whitespace-nowrap px-3 py-3\">\r\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\r\n      </td>\r\n      {/* Actions */}\r\n      <td className=\"whitespace-nowrap py-3 pl-6 pr-3\">\r\n        <div className=\"flex justify-end gap-3\">\r\n          <div className=\"h-[38px] w-[38px] rounded bg-gray-100\"></div>\r\n          <div className=\"h-[38px] w-[38px] rounded bg-gray-100\"></div>\r\n        </div>\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport function InvoicesMobileSkeleton() {\r\n  return (\r\n    <div className=\"mb-2 w-full rounded-md bg-white p-4\">\r\n      <div className=\"flex items-center justify-between border-b border-gray-100 pb-8\">\r\n        <div className=\"flex items-center\">\r\n          <div className=\"mr-2 h-8 w-8 rounded-full bg-gray-100\"></div>\r\n          <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\r\n        </div>\r\n        <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\r\n      </div>\r\n      <div className=\"flex w-full items-center justify-between pt-4\">\r\n        <div>\r\n          <div className=\"h-6 w-16 rounded bg-gray-100\"></div>\r\n          <div className=\"mt-2 h-6 w-24 rounded bg-gray-100\"></div>\r\n        </div>\r\n        <div className=\"flex justify-end gap-2\">\r\n          <div className=\"h-10 w-10 rounded bg-gray-100\"></div>\r\n          <div className=\"h-10 w-10 rounded bg-gray-100\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function InvoicesTableSkeleton() {\r\n  return (\r\n    <div className=\"mt-6 flow-root\">\r\n      <div className=\"inline-block min-w-full align-middle\">\r\n        <div className=\"rounded-lg bg-gray-50 p-2 md:pt-0\">\r\n          <div className=\"md:hidden\">\r\n            <InvoicesMobileSkeleton />\r\n            <InvoicesMobileSkeleton />\r\n            <InvoicesMobileSkeleton />\r\n            <InvoicesMobileSkeleton />\r\n            <InvoicesMobileSkeleton />\r\n            <InvoicesMobileSkeleton />\r\n          </div>\r\n          <table className=\"hidden min-w-full text-gray-900 md:table\">\r\n            <thead className=\"rounded-lg text-left text-sm font-normal\">\r\n              <tr>\r\n                <th scope=\"col\" className=\"px-4 py-5 font-medium sm:pl-6\">\r\n                  Customer\r\n                </th>\r\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\r\n                  Email\r\n                </th>\r\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\r\n                  Amount\r\n                </th>\r\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\r\n                  Date\r\n                </th>\r\n                <th scope=\"col\" className=\"px-3 py-5 font-medium\">\r\n                  Status\r\n                </th>\r\n                <th\r\n                  scope=\"col\"\r\n                  className=\"relative pb-4 pl-3 pr-6 pt-2 sm:pr-6\"\r\n                >\r\n                  <span className=\"sr-only\">Edit</span>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white\">\r\n              <TableRowSkeleton />\r\n              <TableRowSkeleton />\r\n              <TableRowSkeleton />\r\n              <TableRowSkeleton />\r\n              <TableRowSkeleton />\r\n              <TableRowSkeleton />\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1470, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/dashboard/(overview)/page.tsx"],"sourcesContent":["import CardWrapper from '@/app/ui/dashboard/cards';\r\nimport RevenueChart from '@/app/ui/dashboard/revenue-chart';\r\nimport LatestInvoices from '@/app/ui/dashboard/latest-invoices';\r\nimport { lusitana } from '@/app/ui/fonts';\r\nimport { Suspense } from 'react';\r\nimport {\r\n  RevenueChartSkeleton,\r\n  LatestInvoicesSkeleton,\r\n  CardsSkeleton,\r\n} from '@/app/ui/skeletons';\r\n\r\nexport default async function Page() {\r\n  return (\r\n    <main>\r\n      <h1 className={`${lusitana.className} mb-4 text-xl md:text-2xl`}>\r\n        Dashboard\r\n      </h1>\r\n      <div className=\"grid gap-6 sm:grid-cols-2 lg:grid-cols-4\">\r\n        <Suspense fallback={<CardsSkeleton />}>\r\n          <CardWrapper />\r\n        </Suspense>\r\n      </div>\r\n      <div className=\"mt-6 grid grid-cols-1 gap-6 md:grid-cols-4 lg:grid-cols-8\">\r\n        <Suspense fallback={<RevenueChartSkeleton />}>\r\n          <RevenueChart />\r\n        </Suspense>\r\n        <Suspense fallback={<LatestInvoicesSkeleton />}>\r\n          <LatestInvoices />\r\n        </Suspense>\r\n      </div>\r\n    </main>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;;;;;;;;AAQe,eAAe;IAC5B,qBACE,ucAAC;;0BACC,ucAAC;gBAAG,WAAW,GAAG,mLAAA,CAAA,WAAQ,CAAC,SAAS,CAAC,yBAAyB,CAAC;0BAAE;;;;;;0BAGjE,ucAAC;gBAAI,WAAU;0BACb,cAAA,ucAAC,8ZAAA,CAAA,WAAQ;oBAAC,wBAAU,ucAAC,uHAAA,CAAA,gBAAa;;;;;8BAChC,cAAA,ucAAC,gIAAA,CAAA,UAAW;;;;;;;;;;;;;;;0BAGhB,ucAAC;gBAAI,WAAU;;kCACb,ucAAC,8ZAAA,CAAA,WAAQ;wBAAC,wBAAU,ucAAC,uHAAA,CAAA,uBAAoB;;;;;kCACvC,cAAA,ucAAC,2IAAA,CAAA,UAAY;;;;;;;;;;kCAEf,ucAAC,8ZAAA,CAAA,WAAQ;wBAAC,wBAAU,ucAAC,uHAAA,CAAA,yBAAsB;;;;;kCACzC,cAAA,ucAAC,6IAAA,CAAA,UAAc;;;;;;;;;;;;;;;;;;;;;;AAKzB"}},
    {"offset": {"line": 1570, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1581, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/.next-internal/server/app/dashboard/(overview)/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n  '75fbe48fa3e35c63192f88d1c60e680fded3dbd1': (...args) => Promise.resolve(require('ACTIONS_MODULE0')).then(mod => (0, mod['$$RSC_SERVER_ACTION_0'])(...args)),\n});"],"names":[],"mappings":"AAAA,2BAA2B;IACzB,4CAA4C,CAAC,GAAG,OAAS,QAAQ,OAAO,yFAA6B,IAAI,CAAC,CAAA,MAAO,CAAC,GAAG,GAAG,CAAC,wBAAwB,KAAK;AACxJ"}},
    {"offset": {"line": 1584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}